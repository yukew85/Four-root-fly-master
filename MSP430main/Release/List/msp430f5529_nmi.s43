///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V7.12.1.987/W32 for MSP430          26/Sep/2018  16:44:43
// Copyright 1996-2018 IAR Systems AB.
// PC-locked license - IAR Embedded Workbench for Texas Instruments MSP430
//
//    __rt_version  =  3
//    __double_size =  32
//    __reg_r4      =  free
//    __reg_r5      =  free
//    __pic         =  no
//    __core        =  430X
//    __data_model  =  large
//    __code_model  =  large
//    Source file   =  
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\msp430f5529_nmi.c
//    Command line  =  
//        -f C:\Users\颜子楠\AppData\Local\Temp\EW57C3.tmp
//        ("C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\msp430f5529_nmi.c" -D NDEBUG -D RAM_VECTOR -lC
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Release\List" -lA
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Release\List" -o
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Release\Obj" -D__MSP430F5529__ -e --double=32 --dlib_config
//        D:\IAR\430\lib\dlib\dl430xllfn.h -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 - 副本\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\inc\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\USB\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\USB\USB_config\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\USB\USB_User\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\srcUSB\USB_API\USB_CDC_API\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\USB\USB_API\USB_HID_API\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\USB\USB_API\USB_MSC_API\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\KEY\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\LED\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\12864\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\oled\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\mpu6050\inc\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\mpu6050\src\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\nokia5110\inc\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\nokia5110\src\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\LQ_1.8_TFT\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\LCD_API\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\2.2TFT\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\delay\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\System\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\System\inc\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\System\src\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\User\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\User\USER\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\UCOSII\CONFIG\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\uCOSII\App\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\uCOSII\CONFIHG\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\uCOSII\PORT\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\UCOSII\CORE\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\FatFs\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\FatFs\option\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 - 副本\src\"
//        -I "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\nrf24l01\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\MATH\" --core=430X --data_model=large -Oh --multiplier=32
//        --hw_workaround=CPU40 --hw_workaround=nop_after_lpm -DNDEBUG
//        --code_model=large)
//    Locale        =  Chinese (Simplified)_CHN.936
//    List file     =  
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Release\List\msp430f5529_nmi.s43
//
///////////////////////////////////////////////////////////////////////////////

        NAME msp430f5529_nmi

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__code_model", "large"
        RTMODEL "__core", "430X"
        RTMODEL "__data_model", "large"
        RTMODEL "__double_size", "32"
        RTMODEL "__pic", "no"
        RTMODEL "__reg_r4", "free"
        RTMODEL "__reg_r5", "free"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:SORT:NOROOT(0)

        EXTERN ?longjmp_r4
        EXTERN ?longjmp_r5
        EXTERN ?setjmp_r4
        EXTERN ?setjmp_r5

        PUBWEAK ?setjmp_save_r4
        PUBWEAK ?setjmp_save_r5
        PUBLIC NMI_ClearITPendingBit
        PUBLIC NMI_DeInit
        PUBLIC NMI_GetITStatus
        PUBLIC NMI_ITConfig
        PUBLIC NMI_Init
        PUBLIC SFRX
        
          CFI Names cfiNames0
          CFI StackFrame CFA SP DATA
          CFI Resource PC:20, SP:20, SR:16, R4L:16, R4H:4, R4:20, R5L:16, R5H:4
          CFI Resource R5:20, R6L:16, R6H:4, R6:20, R7L:16, R7H:4, R7:20, R8L:16
          CFI Resource R8H:4, R8:20, R9L:16, R9H:4, R9:20, R10L:16, R10H:4
          CFI Resource R10:20, R11L:16, R11H:4, R11:20, R12L:16, R12H:4, R12:20
          CFI Resource R13L:16, R13H:4, R13:20, R14L:16, R14H:4, R14:20, R15L:16
          CFI Resource R15H:4, R15:20
          CFI ResourceParts R4 R4H, R4L
          CFI ResourceParts R5 R5H, R5L
          CFI ResourceParts R6 R6H, R6L
          CFI ResourceParts R7 R7H, R7L
          CFI ResourceParts R8 R8H, R8L
          CFI ResourceParts R9 R9H, R9L
          CFI ResourceParts R10 R10H, R10L
          CFI ResourceParts R11 R11H, R11L
          CFI ResourceParts R12 R12H, R12L
          CFI ResourceParts R13 R13H, R13L
          CFI ResourceParts R14 R14H, R14L
          CFI ResourceParts R15 R15H, R15L
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -4)
          CFI SR Undefined
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L Undefined
          CFI R12H Undefined
          CFI R12 Undefined
          CFI R13L Undefined
          CFI R13H Undefined
          CFI R13 Undefined
          CFI R14L Undefined
          CFI R14H Undefined
          CFI R14 Undefined
          CFI R15L Undefined
          CFI R15H Undefined
          CFI R15 Undefined
          CFI EndCommon cfiCommon0
        
// C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 - 副本\Drivers\src\msp430f5529_nmi.c
//    1 #include "msp430f5529_nmi.h"
//    2 

        RSEG DATA20_C:CONST:SORT:NOROOT(1)
//    3 const SFR_MemMapPtr SFRX = SFR_BASE_PTR;
SFRX:
        DATA32
        DC32 100H
//    4 /*************************************************************************
//    5 *  函数名称：NMI_Init(NMIIES ies)
//    6 *  功能说明：配置NMI
//    7 *  参数说明：NMIIES ies : 社会中NMI中断触发沿
//    8 *  函数返回：无
//    9 *  使用示例：NMI_Init(NMI_Rising); //设置NMI为上升沿触发中断
//   10 *************************************************************************/  

        RSEG `CODE`:CODE:NOROOT(1)
//   11 void  NMI_Init(NMIIES ies)
NMI_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function NMI_Init
          CFI NoCalls
//   12 {
//   13   SFRX->SYS.NMI = ENABLE;                     //使能NMI功能
        BIS.W   #0x1, &0x104
//   14   SFRX->IE.NMI = RESET;                       //禁止NMI中断
        BIC.W   #0x10, &0x100
//   15   if(ies == NMI_Rising)
        CMP.B   #0x0, R12
        JNE     ??NMI_Init_1
//   16   {
//   17     SFRX->SYS.NMIIES = BIT_SET;                   //设置NMI中断沿
        BIS.W   #0x2, &0x104
        JMP     ??NMI_Init_0
//   18   }
//   19   else
//   20   {
//   21     SFRX->SYS.NMIIES = RESET;
??NMI_Init_1:
        BIC.W   #0x2, &0x104
//   22   }
//   23   SFRX->IFG.NMI = RESET;                      //清除NMI中断标志
??NMI_Init_0:
          CFI EndBlock cfiBlock0
        REQUIRE ?Subroutine0
        // Fall through to label ?Subroutine0
//   24 }

        RSEG `CODE`:CODE:NOROOT(1)
?Subroutine0:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI NoFunction
        BIC.W   #0x10, &0x102
        RETA
          CFI EndBlock cfiBlock1
//   25 /*************************************************************************
//   26 *  函数名称：NMI_DeInit()
//   27 *  功能说明：屏蔽NMI功能
//   28 *  参数说明：无
//   29 *  函数返回：无
//   30 *  使用示例：NMI_DeInit(); //取消NMI功能
//   31 *************************************************************************/  

        RSEG `CODE`:CODE:NOROOT(1)
//   32 void    NMI_DeInit   (void)
NMI_DeInit:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function NMI_DeInit
          CFI NoCalls
//   33 {
//   34   SFRX->SYS.NMI = DISABLE;                    //禁止NMI功能
        BIC.W   #0x1, &0x104
//   35 }
        RETA
          CFI EndBlock cfiBlock2
//   36 /*************************************************************************
//   37 *  函数名称：NMI_ITConfig (STATUS ITState)
//   38 *  功能说明：设置是否使能NMI中断
//   39 *  参数说明：BOOL ITState :是否使能NMI中断
//   40 *  函数返回：无
//   41 *  使用示例：NMI_ITConfig (ENABLE);  //使能NMI中断
//   42 *************************************************************************/  

        RSEG `CODE`:CODE:NOROOT(1)
//   43 void  NMI_ITConfig (STATUS ITState)
NMI_ITConfig:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function NMI_ITConfig
          CFI NoCalls
//   44 {
//   45   if(ITState != DISABLE)
        CMP.B   #0x0, R12
        JEQ     ??NMI_ITConfig_0
//   46   {
//   47     SFRX->IE.NMI = ENABLE;                    //设置使能NMI中断
        BIS.W   #0x10, &0x100
        RETA
//   48   }
//   49   else
//   50   {
//   51     SFRX->IE.NMI = DISABLE;
??NMI_ITConfig_0:
        BIC.W   #0x10, &0x100
//   52   }
//   53 }
        RETA
          CFI EndBlock cfiBlock3
//   54 /*************************************************************************
//   55 *  函数名称：NMI_GetITStatus(void)
//   56 *  功能说明：读取NMI中断标志
//   57 *  参数说明：无
//   58 *  函数返回：STATUS : NMI中断事件是否发生
//   59 *  使用示例：if(TRUE == NMI_GetITStatus()){...} //判断NMI中断事件是否发生
//   60 *************************************************************************/  

        RSEG `CODE`:CODE:NOROOT(1)
//   61 STATUS  NMI_GetITStatus(void)               
NMI_GetITStatus:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function NMI_GetITStatus
          CFI NoCalls
//   62 {
//   63   return ((SFRX->IFG.NMI) ? TRUE : FALSE);       //返回中断事件标志
        MOV.W   &0x102, R14
        BIT.B   #0x10, R14
        SUBC.W  R12, R12
        ADD.B   #0x1, R12
        RETA
//   64 }
          CFI EndBlock cfiBlock4
//   65 /*************************************************************************
//   66 *  函数名称：NMI_ClearITPendingBit(void)
//   67 *  功能说明：清除NMI中断标志
//   68 *  参数说明：无
//   69 *  函数返回：无
//   70 *  使用示例：NMI_ClearITPendingBit();  //清除NMI中断标志
//   71 *************************************************************************/  

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
//   72 void  NMI_ClearITPendingBit(void)
NMI_ClearITPendingBit:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function NMI_ClearITPendingBit
          CFI NoCalls
//   73 {
//   74    SFRX->IFG.NMI = RESET;                       //清除中断事件标志
        JMP     ?Subroutine0
        NOP
//   75 }
          CFI EndBlock cfiBlock5

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
?setjmp_save_r4:
        REQUIRE ?setjmp_r4
        REQUIRE ?longjmp_r4

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
?setjmp_save_r5:
        REQUIRE ?setjmp_r5
        REQUIRE ?longjmp_r5

        END
// 
// 76 bytes in segment CODE
//  4 bytes in segment DATA20_C
// 
// 76 bytes of CODE  memory
//  4 bytes of CONST memory
//
//Errors: none
//Warnings: none
