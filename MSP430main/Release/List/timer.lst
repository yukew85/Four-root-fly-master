###############################################################################
#
# IAR C/C++ Compiler V7.12.1.987/W32 for MSP430           01/Nov/2018  12:43:46
# Copyright 1996-2018 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for Texas Instruments MSP430
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  large
#    __code_model  =  large
#    Source file   =  
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\timer.c
#    Command line  =  
#        -f C:\Users\颜子楠\AppData\Local\Temp\EWE4E5.tmp
#        (C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\timer.c
#        -D NDEBUG -D RAM_VECTOR -lC
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Release\List
#        -lA
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Release\List
#        -o C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Release\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430F5529__ -e --double=32 --dlib_config
#        D:\IAR\430\lib\dlib\dl430xllfn.h -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\ -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Drivers\inc\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Drivers\src\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Drivers\src\USB\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Drivers\src\USB\USB_config\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Drivers\src\USB\USB_User\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Drivers\srcUSB\USB_API\USB_CDC_API\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Drivers\src\USB\USB_API\USB_HID_API\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Drivers\src\USB\USB_API\USB_MSC_API\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\KEY\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\LED\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\12864\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\oled\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\mpu6050\inc\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\mpu6050\src\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\nokia5110\inc\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\nokia5110\src\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\LQ_1.8_TFT\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\LCD_API\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\2.2TFT\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\delay\
#        -I C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\System\ -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\System\inc\ -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\System\src\ -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\User\ -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\User\USER\ -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Lib\UCOSII\CONFIG\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Lib\uCOSII\App\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Lib\uCOSII\CONFIHG\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Lib\uCOSII\PORT\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Lib\UCOSII\CORE\
#        -I C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Lib\FatFs\
#        -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Lib\FatFs\option\
#        -I C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\src\ -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\ -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\nrf24l01\
#        -I C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\MATH\ -I
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HAL\
#        --core=430X --data_model=large -Ol --multiplier=32
#        --hw_workaround=CPU40 --hw_workaround=nop_after_lpm -DNDEBUG
#        --code_model=large)
#    Locale        =  Chinese (Simplified)_CHN.936
#    List file     =  
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Release\List\timer.lst
#    Object file   =  
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\Release\Obj\timer.r43
#
###############################################################################

C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码\HardWare\timer.c
      1          #include "timer.h"
      2          #include "include.h"
      3          
      4          extern int RX_Cnt;
      5          extern bool Rx_Start;

   \                                 In  segment DATA20_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero20
      6          uint16_t Cnt_S = 0;
   \                     Cnt_S:
   \   000000                DS8 2

   \                                 In  segment DATA20_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero20
      7          unsigned int Ms = 0;
   \                     Ms:
   \   000000                DS8 2

   \                                 In  segment DATA20_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero20
      8          float high_buf;
   \                     high_buf:
   \   000000                DS8 4

   \                                 In  segment DATA20_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero20
      9          uint16_t cnt_20ms = 0;
   \                     cnt_20ms:
   \   000000                DS8 2

   \                                 In  segment ISR_CODE, align 2
     10          __interrupt void TIMER_TB0_A0_IRQ_Handler()
   \                     TIMER_TB0_A0_IRQ_Handler:
     11          {
   \   000000   3F14         PUSHM.A #0x4, R15
     12              Ms++;
   \   000002   ....9253.... ADDX.W  #0x1, &Ms
     13              
     14              static uint8_t cnt_3ms = 0;
     15              static uint8_t cnt_6ms = 0;	 
     16              static uint16_t cnt_1000ms = 0;
     17              cnt_3ms++;
   \   000008   ....D253.... ADDX.B  #0x1, &??cnt_3ms
     18              cnt_6ms++;
   \   00000E   ....D253.... ADDX.B  #0x1, &??cnt_6ms
     19              cnt_1000ms++;
   \   000014   ....9253.... ADDX.W  #0x1, &??cnt_1000ms
     20              //cnt_300ms++;
     21          
     22              if(Rx_Start)
   \   00001A   ....C293.... CMPX.B  #0x0, &Rx_Start
   \   000020   1124         JEQ     ??TIMER_TB0_A0_IRQ_Handler_0
     23              {
     24                 cnt_20ms++;
   \   000022   ....9253.... ADDX.W  #0x1, &cnt_20ms
     25                 if(cnt_20ms == 100)
   \   000028   ....B2906400 CMPX.W  #0x64, &cnt_20ms
   \            ....        
   \   000030   0920         JNE     ??TIMER_TB0_A0_IRQ_Handler_0
     26                 {
     27                   Rx_Start = false;
   \   000032   ....C243.... MOVX.B  #0x0, &Rx_Start
     28                   cnt_20ms = 0;
   \   000038   ....8243.... MOVX.W  #0x0, &cnt_20ms
     29                   RX_Cnt = 0;
   \   00003E   ....8243.... MOVX.W  #0x0, &RX_Cnt
     30                 }
     31              }
     32              
     33              
     34              if(cnt_1000ms == 1000)
   \                     ??TIMER_TB0_A0_IRQ_Handler_0:
   \   000044   ....B290E803 CMPX.W  #0x3e8, &??cnt_1000ms
   \            ....        
   \   00004C   0620         JNE     ??TIMER_TB0_A0_IRQ_Handler_1
     35              {
     36                cnt_1000ms = 0;
   \   00004E   ....8243.... MOVX.W  #0x0, &??cnt_1000ms
     37                Cnt_S++;
   \   000054   ....9253.... ADDX.W  #0x1, &Cnt_S
     38              }
     39          
     40              if(cnt_6ms == 5) //6ms更新一次
   \                     ??TIMER_TB0_A0_IRQ_Handler_1:
   \   00005A   ....F2900500 CMPX.B  #0x5, &??cnt_6ms
   \            ....        
   \   000062   1B20         JNE     ??TIMER_TB0_A0_IRQ_Handler_2
     41              {
     42                  cnt_6ms = 0;
   \   000064   ....C243.... MOVX.B  #0x0, &??cnt_6ms
     43                  GetAngle(&MPU6050,&Angle,0.00626f); 
   \   00006A   3E40B020     MOV.W   #0x20b0, R14
   \   00006E   3F40CD3B     MOV.W   #0x3bcd, R15
   \   000072   ........     MOVA    #Angle, R13
   \   000076   ........     MOVA    #MPU6050, R12
   \   00007A   ........     CALLA   #GetAngle
     44                  high_buf = user_SPL06_get();
   \   00007E   ........     CALLA   #user_SPL06_get
   \   000082   ....824C.... MOVX.W  R12, &high_buf
   \   000088   ....824D.... MOVX.W  R13, &high_buf + 2
     45                  HeightPidControl(0.018f); //高度控制 
   \   00008E   3C40BC74     MOV.W   #0x74bc, R12
   \   000092   3D40933C     MOV.W   #0x3c93, R13
   \   000096   ........     CALLA   #HeightPidControl
     46              }			
     47          
     48              if(cnt_3ms == 2)  //3ms更新一次
   \                     ??TIMER_TB0_A0_IRQ_Handler_2:
   \   00009A   ....E293.... CMPX.B  #0x2, &??cnt_3ms
   \   0000A0   0F20         JNE     ??TIMER_TB0_A0_IRQ_Handler_3
     49              {
     50                  cnt_3ms = 0;
   \   0000A2   ....C243.... MOVX.B  #0x0, &??cnt_3ms
     51                  MpuGetData(); //获取MPU6050数据
   \   0000A8   ........     CALLA   #MpuGetData
     52                  RC_Analy();	  //遥控数据获取与解析
   \   0000AC   ........     CALLA   #RC_Analy
     53          
     54                  FlightPidControl(0.003f); //姿态控制
   \   0000B0   3C40A69B     MOV.W   #0x9ba6, R12
   \   0000B4   3D40443B     MOV.W   #0x3b44, R13
   \   0000B8   ........     CALLA   #FlightPidControl
     55                  MotorControl();//电机输出
   \   0000BC   ........     CALLA   #MotorControl
     56              }
     57              LED_Update();
   \                     ??TIMER_TB0_A0_IRQ_Handler_3:
   \   0000C0   ........     CALLA   #LED_Update
     58          }
   \   0000C4   3C16         POPM.A  #0x4, R15
   \   0000C6   0013         RETI

   \                                 In  segment DATA20_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero20
   \                     ??cnt_3ms:
   \   000000                DS8 1

   \                                 In  segment DATA20_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero20
   \                     ??cnt_6ms:
   \   000000                DS8 1

   \                                 In  segment DATA20_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero20
   \                     ??cnt_1000ms:
   \   000000                DS8 2
     59          

   \                                 In  segment CODE, align 2
     60          void Timer_Init()
   \                     Timer_Init:
     61          {
     62              Set_Vector_Handler(VECTOR_TIMER0_B0,TIMER_TB0_A0_IRQ_Handler);    //设置中断向量，最好先设置中断向量，在开启中断
   \   000000   ........     MOVA    #TIMER_TB0_A0_IRQ_Handler, R13
   \   000004   7C403B00     MOV.B   #0x3b, R12
   \   000008   ........     CALLA   #Set_Vector_Handler
     63              TIMER_Interval_Ms(TIMER_B0,1);                    //初始化一个500ms的定时中断
   \   00000C   3E40E803     MOV.W   #0x3e8, R14
   \   000010   0F43         MOV.W   #0x0, R15
   \   000012   7C400300     MOV.B   #0x3, R12
   \   000016   ........     CALLA   #TIMER_Interval_Us
     64              TIMER_ITConfig (TIMER_B0,TIMER_CCR0_IRQn,ENABLE);              //使能TIMER的某一个中断
   \   00001A   5E43         MOV.B   #0x1, R14
   \   00001C   4D43         MOV.B   #0x0, R13
   \   00001E   7C400300     MOV.B   #0x3, R12
   \   000022   ........     BRA     #TIMER_ITConfig
     65          }
     66          
     67          

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
     20   TIMER_TB0_A0_IRQ_Handler
       20   -> FlightPidControl
       20   -> GetAngle
       20   -> HeightPidControl
       20   -> LED_Update
       20   -> MotorControl
       20   -> MpuGetData
       20   -> RC_Analy
       20   -> user_SPL06_get
      4   Timer_Init
        4   -> Set_Vector_Handler
        0   -> TIMER_ITConfig
        4   -> TIMER_Interval_Us


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  Cnt_S
       2  Ms
     200  TIMER_TB0_A0_IRQ_Handler
      38  Timer_Init
       2  cnt_1000ms
       2  cnt_20ms
       1  cnt_3ms
       1  cnt_6ms
       4  high_buf

 
  38 bytes in segment CODE
  14 bytes in segment DATA20_Z
 200 bytes in segment ISR_CODE
 
 238 bytes of CODE memory
  14 bytes of DATA memory

Errors: none
Warnings: none
