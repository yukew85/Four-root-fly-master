///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V7.12.1.987/W32 for MSP430          26/Sep/2018  16:44:44
// Copyright 1996-2018 IAR Systems AB.
// PC-locked license - IAR Embedded Workbench for Texas Instruments MSP430
//
//    __rt_version  =  3
//    __double_size =  32
//    __reg_r4      =  free
//    __reg_r5      =  free
//    __pic         =  no
//    __core        =  430X
//    __data_model  =  large
//    __code_model  =  large
//    Source file   =  
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\msp430f5529_watchdog.c
//    Command line  =  
//        -f C:\Users\颜子楠\AppData\Local\Temp\EW5B73.tmp
//        ("C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\msp430f5529_watchdog.c" -D NDEBUG -D RAM_VECTOR -lC
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Release\List" -lA
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Release\List" -o
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Release\Obj" -D__MSP430F5529__ -e --double=32 --dlib_config
//        D:\IAR\430\lib\dlib\dl430xllfn.h -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 - 副本\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\inc\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\USB\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\USB\USB_config\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\USB\USB_User\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\srcUSB\USB_API\USB_CDC_API\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\USB\USB_API\USB_HID_API\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\USB\USB_API\USB_MSC_API\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\KEY\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\LED\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\12864\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\oled\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\mpu6050\inc\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\mpu6050\src\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\nokia5110\inc\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\nokia5110\src\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\LQ_1.8_TFT\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\LCD_API\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\2.2TFT\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\delay\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\System\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\System\inc\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\System\src\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\User\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\User\USER\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\UCOSII\CONFIG\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\uCOSII\App\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\uCOSII\CONFIHG\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\uCOSII\PORT\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\UCOSII\CORE\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\FatFs\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\FatFs\option\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 - 副本\src\"
//        -I "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\nrf24l01\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\MATH\" --core=430X --data_model=large -Oh --multiplier=32
//        --hw_workaround=CPU40 --hw_workaround=nop_after_lpm -DNDEBUG
//        --code_model=large)
//    Locale        =  Chinese (Simplified)_CHN.936
//    List file     =  
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Release\List\msp430f5529_watchdog.s43
//
///////////////////////////////////////////////////////////////////////////////

        NAME msp430f5529_watchdog

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__code_model", "large"
        RTMODEL "__core", "430X"
        RTMODEL "__data_model", "large"
        RTMODEL "__double_size", "32"
        RTMODEL "__pic", "no"
        RTMODEL "__reg_r4", "free"
        RTMODEL "__reg_r5", "free"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:SORT:NOROOT(0)

        EXTERN ?ShiftLeft64_6
        EXTERN __iar_HWMUL
        EXTERN ?Mul32
        EXTERN _Cast32sto32f
        EXTERN _Cast32uto32f
        EXTERN _Div32f
        EXTERN ?FLT_GE
        EXTERN ?longjmp_r4
        EXTERN ?longjmp_r5
        EXTERN ?setjmp_r4
        EXTERN ?setjmp_r5

        PUBWEAK ?setjmp_save_r4
        PUBWEAK ?setjmp_save_r5
        PUBLIC DisableWatchDog
        PUBLIC SoftWare_RESET
        PUBLIC WDTX
        PUBLIC WatchDog_Delay_Ms
        PUBLIC WatchDog_Feed
        PUBLIC WatchDog_ITConfig
        PUBLIC WatchDog_Init
        PUBLIC WatchDog_Time_Cal
        PUBLIC WatchDog_Timer_Init
        PUBWEAK _A_WDTCTL_L
        
          CFI Names cfiNames0
          CFI StackFrame CFA SP DATA
          CFI Resource PC:20, SP:20, SR:16, R4L:16, R4H:4, R4:20, R5L:16, R5H:4
          CFI Resource R5:20, R6L:16, R6H:4, R6:20, R7L:16, R7H:4, R7:20, R8L:16
          CFI Resource R8H:4, R8:20, R9L:16, R9H:4, R9:20, R10L:16, R10H:4
          CFI Resource R10:20, R11L:16, R11H:4, R11:20, R12L:16, R12H:4, R12:20
          CFI Resource R13L:16, R13H:4, R13:20, R14L:16, R14H:4, R14:20, R15L:16
          CFI Resource R15H:4, R15:20
          CFI ResourceParts R4 R4H, R4L
          CFI ResourceParts R5 R5H, R5L
          CFI ResourceParts R6 R6H, R6L
          CFI ResourceParts R7 R7H, R7L
          CFI ResourceParts R8 R8H, R8L
          CFI ResourceParts R9 R9H, R9L
          CFI ResourceParts R10 R10H, R10L
          CFI ResourceParts R11 R11H, R11L
          CFI ResourceParts R12 R12H, R12L
          CFI ResourceParts R13 R13H, R13L
          CFI ResourceParts R14 R14H, R14L
          CFI ResourceParts R15 R15H, R15L
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -4)
          CFI SR Undefined
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L Undefined
          CFI R12H Undefined
          CFI R12 Undefined
          CFI R13L Undefined
          CFI R13H Undefined
          CFI R13 Undefined
          CFI R14L Undefined
          CFI R14H Undefined
          CFI R14 Undefined
          CFI R15L Undefined
          CFI R15H Undefined
          CFI R15 Undefined
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -4)
          CFI SR Undefined
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L SameValue
          CFI R12H SameValue
          CFI R12 Concat
          CFI R13L SameValue
          CFI R13H SameValue
          CFI R13 Concat
          CFI R14L SameValue
          CFI R14H SameValue
          CFI R14 Concat
          CFI R15L SameValue
          CFI R15H SameValue
          CFI R15 Concat
          CFI EndCommon cfiCommon1
        
        EXTERN g_sClock
        EXTERN SFRX

// C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 - 副本\Drivers\src\msp430f5529_watchdog.c
//    1 #include "msp430f5529_watchdog.h"

        ASEGN DATA16_AN:DATA:NOROOT,015cH
// union <unnamed> __data16 _A_WDTCTL_L
_A_WDTCTL_L:
        DS8 2
//    2 #include "msp430f5529_clock.h"
//    3 

        RSEG DATA20_C:CONST:SORT:NOROOT(1)
//    4 static const uint32_t WDT_Counter[]={2000000000u,128000000u,8192000u,512000u,32768u,8192u,512u,64u};
WDT_Counter:
        DATA32
        DC32 2000000000, 128000000, 8192000, 512000, 32768, 8192, 512, 64

        RSEG DATA20_C:CONST:SORT:NOROOT(1)
//    5 const WDT_MemMapPtr WDTX = WDT_BASE_PTR;
WDTX:
        DATA32
        DC32 150H
//    6 extern const SFR_MemMapPtr SFRX;
//    7 uint16_t WatchDog_Time_Cal(uint32_t ms);
//    8 /*******************************************************************************
//    9 *  函数名称：DisableWatchDog(void)
//   10 *  功能说明：关闭看门狗
//   11 *  参数说明：无
//   12 *  函数返回：无
//   13 ********************************************************************************/

        RSEG `CODE`:CODE:NOROOT(1)
//   14 void DisableWatchDog(void)
DisableWatchDog:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function DisableWatchDog
          CFI NoCalls
//   15 {
//   16   WDTCTL = (WDTCTL&0xFF)|(WDTPW+WDTHOLD);
        MOV.W   &0x15c, R15
        AND.B   #0xff, R15
        BIS.W   #0x5a80, R15
          CFI EndBlock cfiBlock0
        REQUIRE ?Subroutine0
        REQUIRE _A_WDTCTL_L
        // Fall through to label ?Subroutine0
//   17 } 

        RSEG `CODE`:CODE:NOROOT(1)
?Subroutine0:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI NoFunction
//   18 /*******************************************************************************
//   19 *  函数名称：WatchDog_Init(uint32_t ms) 
//   20 *  功能说明：设置看门狗时间，注意定时时间只是比较接近设置时间的一个时间，并不精准,返回及时间偏
//   21 *  参数说明：uint32_t ms          ：功能时间
//   22 *  函数返回：//误差时间（单位：ms）
//   23 *  使用示例： WatchDog_Init(500);   //设置看门狗时间为500ms
//   24 ********************************************************************************/
//   25 void  WatchDog_Init(uint32_t ms)                                        //看门狗功能配置
//   26 {
//   27   uint16_t WDT_Reg_Val = WatchDog_Time_Cal(ms);
//   28   SFRX->IE.WDT = DISABLE;                      //关闭看门狗中断
//   29   WDTCTL = WDTPW | WDTCNTCL | WDT_Reg_Val ; //配置
//   30 }
//   31 /*******************************************************************************
//   32 *  函数名称：WatchDog_Timer_Init(uint32_t ms) 
//   33 *  功能说明：设置看门狗作为定时器并设置时间，注意定时时间只是比较接近设置时间的一个时间，并不精准,返回及时间偏
//   34 *  参数说明：uint32_t ms          ：功能时间
//   35 *  函数返回：//误差时间（单位：ms）
//   36 *  使用示例： WatchDog_Timer_Init(500);   //设置看门狗定时时间为500ms
//   37 ********************************************************************************/
//   38 void  WatchDog_Timer_Init(uint32_t ms)                                  //看门狗定时器功能初始化
//   39 {
//   40   uint16_t WDT_Reg_Val = WatchDog_Time_Cal(ms);
//   41   SFRX->IE.WDT = DISABLE;                      //关闭看门狗中断
//   42   WDTCTL = WDTPW | WDTCNTCL | WDT_Reg_Val | WDTTMSEL; //配置
//   43 }
//   44 /*******************************************************************************
//   45 *  函数名称：WatchDog_Delay_Ms(uint32_t ms) 
//   46 *  功能说明：设置看门狗延时一段时间，注意定时时间只是比较接近设置时间的一个时间，并不精准,返回及时间偏
//   47 *  参数说明：uint32_t ms          ：功能时间
//   48 *  函数返回：//误差时间（单位：ms）
//   49 *  使用示例：WatchDog_Delay_Ms(500);   //设置在此处使用看门狗延时500ms
//   50 ********************************************************************************/
//   51 void  WatchDog_Delay_Ms  (uint32_t ms)                                  //看门狗延时使用
//   52 {
//   53   SFRX->IFG.WDT = RESET;
//   54   uint16_t WDT_Reg_Val = WatchDog_Time_Cal(ms);
//   55   SFRX->IE.WDT = DISABLE;                      //关闭看门狗中断
//   56   WDTCTL = WDTPW | WDTCNTCL | WDT_Reg_Val | WDTTMSEL; //配置
//   57   while(SFRX->IFG.WDT == RESET);
//   58 }
//   59 /*************************************************************************
//   60 *  函数名称：WatchDog_Feed(void)
//   61 *  功能说明：喂狗
//   62 *  参数说明：无
//   63 *  函数返回：无
//   64 *  使用示例：WatchDog_Feed();  //喂狗，清除看门狗计数值
//   65 *************************************************************************/  
//   66 void  WatchDog_Feed(void)
//   67 {
//   68   WDTCTL =(WDTCTL&0X00FF) | (WDTCNTCL + WDTPW);                //计数值清零
        MOV.W   R15, &0x15c
//   69 }
        RETA
          CFI EndBlock cfiBlock1

        RSEG `CODE`:CODE:NOROOT(1)
WatchDog_Time_Cal:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function WatchDog_Time_Cal
        PUSHM.A #0x8, R11
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+36
        PUSHM.W #0x2, R13
          CFI CFA SP+40
        SUBA    #0x6, SP
          CFI CFA SP+46
        MOV.W   #0x7, 0(SP)
        MOV.W   #0x7, R11
        MOV.W   R11, R10
        MOVA    #g_sClock, R7
        PUSH.W  SR
          CFI CFA SP+48
        DINT
        NOP
        MOV.W   0xc(R7), &__iar_HWMUL + 16     // MPY32L
        MOV.W   0xe(R7), &__iar_HWMUL + 18     // MPY32H
        CALLA   #?Subroutine2
??CrossCallReturnLabel_0:
        NOP
        POP.W   SR
          CFI CFA SP+46
        CALLA   #?Subroutine5
??CrossCallReturnLabel_6:
        MOV.W   0x6(SP), R14
        MOV.W   0x8(SP), R15
          CFI FunCall ?Mul32
        CALLA   #?Mul32
        JMP     ??WatchDog_Time_Cal_7
??WatchDog_Time_Cal_0:
        MOV.W   @SP, R4
        CMP.W   #0x0, R4
        JEQ     ??WatchDog_Time_Cal_14
        ADD.W   #0xffff, 0(SP)
??WatchDog_Time_Cal_7:
        MOV.W   @SP, R15
        CALLA   #?Subroutine4
??CrossCallReturnLabel_4:
        JNC     ??WatchDog_Time_Cal_0
        JNE     ??WatchDog_Time_Cal_15
        CMP.W   R12, R8
        JNC     ??WatchDog_Time_Cal_0
??WatchDog_Time_Cal_15:
        CMP.W   @SP, R10
        JEQ     ??WatchDog_Time_Cal_14
        MOV.W   @SP, R4
        CMP.W   #0x0, R4
        JEQ     ??WatchDog_Time_Cal_14
        MOV.W   R4, R6
        CALLA   #?Subroutine3
??CrossCallReturnLabel_2:
        JNC     ??WatchDog_Time_Cal_16
        JNE     ??WatchDog_Time_Cal_14
        CMP.W   R14, R4
        JC      ??WatchDog_Time_Cal_14
??WatchDog_Time_Cal_16:
        MOV.W   R6, 0(SP)
        MOV.W   R4, R8
        MOV.W   R5, R9
        JMP     ??WatchDog_Time_Cal_8
??WatchDog_Time_Cal_14:
        SUB.W   R12, R8
        SUBC.W  R13, R9
??WatchDog_Time_Cal_8:
        CALLA   #?Subroutine6
??CrossCallReturnLabel_8:
        MOV.W   0xc(R7), R12
        MOV.W   0xe(R7), R13
        CALLA   #?Subroutine7
??CrossCallReturnLabel_10:
        MOV.W   R12, 0x2(SP)
        MOV.W   R13, 0x4(SP)
        MOV.W   0x6(SP), R12
        MOV.W   0x8(SP), R13
        MOV.W   0x18(R7), R14
        MOV.W   0x1a(R7), R15
          CFI FunCall ?Mul32
        CALLA   #?Mul32
        PUSH.W  SR
          CFI CFA SP+48
        DINT
        NOP
        MOV.W   R12, &__iar_HWMUL + 16         // MPY32L
        MOV.W   R13, &__iar_HWMUL + 18         // MPY32H
        CALLA   #?Subroutine2
??CrossCallReturnLabel_1:
        NOP
        POP.W   SR
          CFI CFA SP+46
        CALLA   #?Subroutine5
??CrossCallReturnLabel_7:
        JMP     ??WatchDog_Time_Cal_9
??WatchDog_Time_Cal_1:
        CMP.W   #0x0, R11
        JEQ     ??WatchDog_Time_Cal_17
        ADD.W   #0xffff, R11
??WatchDog_Time_Cal_9:
        MOV.W   R11, R15
        CALLA   #?Subroutine4
??CrossCallReturnLabel_5:
        JNC     ??WatchDog_Time_Cal_1
        JNE     ??WatchDog_Time_Cal_18
        CMP.W   R12, R8
        JNC     ??WatchDog_Time_Cal_1
??WatchDog_Time_Cal_18:
        CMP.W   R10, R11
        JEQ     ??WatchDog_Time_Cal_17
        CMP.W   #0x0, R11
        JEQ     ??WatchDog_Time_Cal_17
        MOV.W   R11, R6
        CALLA   #?Subroutine3
??CrossCallReturnLabel_3:
        JNC     ??WatchDog_Time_Cal_19
        JNE     ??WatchDog_Time_Cal_17
        CMP.W   R14, R4
        JC      ??WatchDog_Time_Cal_17
??WatchDog_Time_Cal_19:
        MOV.W   R6, R11
        MOV.W   R4, R8
        MOV.W   R5, R9
        JMP     ??WatchDog_Time_Cal_10
??WatchDog_Time_Cal_17:
        SUB.W   R12, R8
        SUBC.W  R13, R9
??WatchDog_Time_Cal_10:
        CALLA   #?Subroutine6
??CrossCallReturnLabel_9:
        MOV.W   0x18(R7), R12
        MOV.W   0x1a(R7), R13
        CALLA   #?Subroutine7
??CrossCallReturnLabel_11:
        MOV.W   R12, R8
        MOV.W   R13, R9
        PUSH.W  SR
          CFI CFA SP+48
        DINT
        NOP
        MOV.W   #0x2710, &__iar_HWMUL + 16     // MPY32L
        MOV.W   0x8(SP), &__iar_HWMUL + 32     // OP2L
        MOV.W   0xa(SP), &__iar_HWMUL + 34     // OP2H
        MOV.W   &__iar_HWMUL + 36, R14         // RES0
        MOV.W   &__iar_HWMUL + 38, R15         // RES1
        NOP
        MOV.W   @SP, SR
        NOP
        DINT
        NOP
        MOV.W   R14, &__iar_HWMUL + 16         // MPY32L
        MOV.W   R15, &__iar_HWMUL + 18         // MPY32H
        CALLA   #?Subroutine9
??CrossCallReturnLabel_14:
        MOV.W   &__iar_HWMUL + 36, R4          // RES0
        MOV.W   &__iar_HWMUL + 38, R5          // RES1
        MOV.W   &__iar_HWMUL + 40, R12         // RES2
        MOV.W   &__iar_HWMUL + 42, R7          // RES3
        NOP
        POP.W   SR
          CFI CFA SP+46
        SWPB    R7
        SWPB    R12
        XOR.B   R7, R12
        XOR.W   R7, R12
        MOV.B   R7, R13
        RRUM.W  #0x1, R13
        RRC.W   R12
        JMP     ??WatchDog_Time_Cal_11
??WatchDog_Time_Cal_2:
        CMP.W   #0x0, R10
        JEQ     ??WatchDog_Time_Cal_20
        ADD.W   #0xffff, R10
??WatchDog_Time_Cal_11:
        MOV.W   R10, R15
        RLAM.A  #0x2, R15
        MOVX.W  WDT_Counter(R15), R6
        MOVX.W  WDT_Counter + 2(R15), R7
        CMP.W   R13, R7
        JNC     ??WatchDog_Time_Cal_2
        JNE     ??WatchDog_Time_Cal_21
        CMP.W   R12, R6
        JNC     ??WatchDog_Time_Cal_2
??WatchDog_Time_Cal_21:
        CMP.W   #0x7, R10
        JEQ     ??WatchDog_Time_Cal_20
        CMP.W   #0x0, R10
        JEQ     ??WatchDog_Time_Cal_20
        MOV.W   R10, R4
        ADD.W   #0x1, R4
        RLAM.A  #0x2, R4
        MOV.W   R12, R14
        MOV.W   R13, R15
        SUBX.W  WDT_Counter(R4), R14
        SUBCX.W WDT_Counter + 2(R4), R15
        MOV.W   R6, R4
        MOV.W   R7, R5
        SUB.W   R12, R4
        SUBC.W  R13, R5
        CMP.W   R5, R15
        JNC     ??WatchDog_Time_Cal_22
        JNE     ??WatchDog_Time_Cal_20
        CMP.W   R4, R14
        JC      ??WatchDog_Time_Cal_20
??WatchDog_Time_Cal_22:
        ADD.W   #0x1, R10
        MOV.W   R14, R12
        MOV.W   R15, R13
        JMP     ??WatchDog_Time_Cal_12
??WatchDog_Time_Cal_20:
        SUB.W   R12, R6
        SUBC.W  R13, R7
        MOV.W   R6, R12
        MOV.W   R7, R13
??WatchDog_Time_Cal_12:
        CMP.W   #0x0, R13
        JL      ??WatchDog_Time_Cal_23
        JNE     ??WatchDog_Time_Cal_24
        CMP.W   #0x1, R12
        JC      ??WatchDog_Time_Cal_24
??WatchDog_Time_Cal_23:
        XOR.W   #0xffff, R12
        XOR.W   #0xffff, R13
        ADD.W   #0x1, R12
        ADDC.W  #0x0, R13
??WatchDog_Time_Cal_24:
          CFI FunCall _Cast32sto32f
        CALLA   #_Cast32sto32f
        MOV.W   #0x4000, R14
        MOV.W   #0x461c, R15
          CFI FunCall _Div32f
        CALLA   #_Div32f
        MOV.W   R12, R6
        MOV.W   R13, R7
        MOV.W   R8, R12
        MOV.W   R9, R13
        MOV.W   0x2(SP), R14
        MOV.W   0x4(SP), R15
          CFI FunCall ?FLT_GE
        CALLA   #?FLT_GE
        JNC     ??WatchDog_Time_Cal_25
        MOV.W   R6, R12
        MOV.W   R7, R13
          CFI FunCall ?FLT_GE
        CALLA   #?FLT_GE
        JNC     ??WatchDog_Time_Cal_25
        MOV.W   @SP, R12
        JMP     ??WatchDog_Time_Cal_13
??WatchDog_Time_Cal_25:
        MOV.W   R14, R12
        MOV.W   R15, R13
        MOV.W   R8, R14
        MOV.W   R9, R15
          CFI FunCall ?FLT_GE
        CALLA   #?FLT_GE
        JNC     ??WatchDog_Time_Cal_26
        MOV.W   R6, R12
        MOV.W   R7, R13
          CFI FunCall ?FLT_GE
        CALLA   #?FLT_GE
        JNC     ??WatchDog_Time_Cal_26
        BIS.W   #0x20, R11
        MOV.W   R11, R12
        JMP     ??WatchDog_Time_Cal_13
??WatchDog_Time_Cal_26:
        BIS.W   #0x40, R10
        MOV.W   R10, R12
??WatchDog_Time_Cal_13:
        ADDA    #0xa, SP
          CFI CFA SP+36
        POPM.A  #0x8, R11
          CFI R10H SameValue
          CFI R11H SameValue
          CFI R4H SameValue
          CFI R5H SameValue
          CFI R6H SameValue
          CFI R7H SameValue
          CFI R8H SameValue
          CFI R9H SameValue
          CFI R10L SameValue
          CFI R11L SameValue
          CFI R4L SameValue
          CFI R5L SameValue
          CFI R6L SameValue
          CFI R7L SameValue
          CFI R8L SameValue
          CFI R9L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock2

        RSEG `CODE`:CODE:NOROOT(1)
?Subroutine7:
          CFI Block cfiCond3 Using cfiCommon0
          CFI Function WatchDog_Time_Cal
          CFI Conditional ??CrossCallReturnLabel_10
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+50
          CFI Block cfiCond4 Using cfiCommon0
          CFI (cfiCond4) Function WatchDog_Time_Cal
          CFI (cfiCond4) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond4) R4L Frame(CFA, -36)
          CFI (cfiCond4) R4H Frame(CFA, -34)
          CFI (cfiCond4) R5L Frame(CFA, -32)
          CFI (cfiCond4) R5H Frame(CFA, -30)
          CFI (cfiCond4) R6L Frame(CFA, -28)
          CFI (cfiCond4) R6H Frame(CFA, -26)
          CFI (cfiCond4) R7L Frame(CFA, -24)
          CFI (cfiCond4) R7H Frame(CFA, -22)
          CFI (cfiCond4) R8L Frame(CFA, -20)
          CFI (cfiCond4) R8H Frame(CFA, -18)
          CFI (cfiCond4) R9L Frame(CFA, -16)
          CFI (cfiCond4) R9H Frame(CFA, -14)
          CFI (cfiCond4) R10L Frame(CFA, -12)
          CFI (cfiCond4) R10H Frame(CFA, -10)
          CFI (cfiCond4) R11L Frame(CFA, -8)
          CFI (cfiCond4) R11H Frame(CFA, -6)
          CFI (cfiCond4) CFA SP+50
          CFI Block cfiPicker5 Using cfiCommon1
          CFI (cfiPicker5) NoFunction
          CFI (cfiPicker5) Picker
          CFI (cfiCond3) FunCall WatchDog_Time_Cal _Cast32uto32f
          CFI (cfiCond3) FunCall WatchDog_Time_Cal _Cast32uto32f
        CALLA   #_Cast32uto32f
        MOV.W   R12, R14
        MOV.W   R13, R15
        MOV.W   R8, R12
        MOV.W   R9, R13
          CFI (cfiCond3) TailCall WatchDog_Time_Cal _Div32f
          CFI (cfiCond3) TailCall WatchDog_Time_Cal _Div32f
        BRA     #_Div32f
          CFI EndBlock cfiCond3
          CFI EndBlock cfiCond4
          CFI EndBlock cfiPicker5

        RSEG `CODE`:CODE:NOROOT(1)
?Subroutine6:
          CFI Block cfiCond6 Using cfiCommon0
          CFI Function WatchDog_Time_Cal
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+50
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function WatchDog_Time_Cal
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond7) R4L Frame(CFA, -36)
          CFI (cfiCond7) R4H Frame(CFA, -34)
          CFI (cfiCond7) R5L Frame(CFA, -32)
          CFI (cfiCond7) R5H Frame(CFA, -30)
          CFI (cfiCond7) R6L Frame(CFA, -28)
          CFI (cfiCond7) R6H Frame(CFA, -26)
          CFI (cfiCond7) R7L Frame(CFA, -24)
          CFI (cfiCond7) R7H Frame(CFA, -22)
          CFI (cfiCond7) R8L Frame(CFA, -20)
          CFI (cfiCond7) R8H Frame(CFA, -18)
          CFI (cfiCond7) R9L Frame(CFA, -16)
          CFI (cfiCond7) R9H Frame(CFA, -14)
          CFI (cfiCond7) R10L Frame(CFA, -12)
          CFI (cfiCond7) R10H Frame(CFA, -10)
          CFI (cfiCond7) R11L Frame(CFA, -8)
          CFI (cfiCond7) R11H Frame(CFA, -6)
          CFI (cfiCond7) CFA SP+50
          CFI Block cfiPicker8 Using cfiCommon1
          CFI (cfiPicker8) NoFunction
          CFI (cfiPicker8) Picker
        CMP.W   #0x0, R9
        JL      ??WatchDog_Time_Cal_3
        JNE     ??WatchDog_Time_Cal_4
        CMP.W   #0x1, R8
        JC      ??WatchDog_Time_Cal_4
??WatchDog_Time_Cal_3:
        XOR.W   #0xffff, R8
        XOR.W   #0xffff, R9
        ADD.W   #0x1, R8
        ADDC.W  #0x0, R9
??WatchDog_Time_Cal_4:
        MOV.W   R8, R12
        MOV.W   R9, R13
          CFI (cfiCond6) FunCall WatchDog_Time_Cal _Cast32sto32f
          CFI (cfiCond6) FunCall WatchDog_Time_Cal _Cast32sto32f
        CALLA   #_Cast32sto32f
        MOV.W   R12, R8
        MOV.W   R13, R9
        RETA
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiPicker8

        RSEG `CODE`:CODE:NOROOT(1)
?Subroutine5:
          CFI Block cfiCond9 Using cfiCommon0
          CFI Function WatchDog_Time_Cal
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+50
          CFI Block cfiCond10 Using cfiCommon0
          CFI (cfiCond10) Function WatchDog_Time_Cal
          CFI (cfiCond10) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond10) R4L Frame(CFA, -36)
          CFI (cfiCond10) R4H Frame(CFA, -34)
          CFI (cfiCond10) R5L Frame(CFA, -32)
          CFI (cfiCond10) R5H Frame(CFA, -30)
          CFI (cfiCond10) R6L Frame(CFA, -28)
          CFI (cfiCond10) R6H Frame(CFA, -26)
          CFI (cfiCond10) R7L Frame(CFA, -24)
          CFI (cfiCond10) R7H Frame(CFA, -22)
          CFI (cfiCond10) R8L Frame(CFA, -20)
          CFI (cfiCond10) R8H Frame(CFA, -18)
          CFI (cfiCond10) R9L Frame(CFA, -16)
          CFI (cfiCond10) R9H Frame(CFA, -14)
          CFI (cfiCond10) R10L Frame(CFA, -12)
          CFI (cfiCond10) R10H Frame(CFA, -10)
          CFI (cfiCond10) R11L Frame(CFA, -8)
          CFI (cfiCond10) R11H Frame(CFA, -6)
          CFI (cfiCond10) CFA SP+50
          CFI Block cfiPicker11 Using cfiCommon1
          CFI (cfiPicker11) NoFunction
          CFI (cfiPicker11) Picker
        SWPB    R15
        SWPB    R12
        XOR.B   R15, R12
        XOR.W   R15, R12
        MOV.B   R15, R13
        RRUM.W  #0x1, R13
        RRC.W   R12
        RETA
          CFI EndBlock cfiCond9
          CFI EndBlock cfiCond10
          CFI EndBlock cfiPicker11

        RSEG `CODE`:CODE:NOROOT(1)
?Subroutine4:
          CFI Block cfiCond12 Using cfiCommon0
          CFI Function WatchDog_Time_Cal
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+50
          CFI Block cfiCond13 Using cfiCommon0
          CFI (cfiCond13) Function WatchDog_Time_Cal
          CFI (cfiCond13) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond13) R4L Frame(CFA, -36)
          CFI (cfiCond13) R4H Frame(CFA, -34)
          CFI (cfiCond13) R5L Frame(CFA, -32)
          CFI (cfiCond13) R5H Frame(CFA, -30)
          CFI (cfiCond13) R6L Frame(CFA, -28)
          CFI (cfiCond13) R6H Frame(CFA, -26)
          CFI (cfiCond13) R7L Frame(CFA, -24)
          CFI (cfiCond13) R7H Frame(CFA, -22)
          CFI (cfiCond13) R8L Frame(CFA, -20)
          CFI (cfiCond13) R8H Frame(CFA, -18)
          CFI (cfiCond13) R9L Frame(CFA, -16)
          CFI (cfiCond13) R9H Frame(CFA, -14)
          CFI (cfiCond13) R10L Frame(CFA, -12)
          CFI (cfiCond13) R10H Frame(CFA, -10)
          CFI (cfiCond13) R11L Frame(CFA, -8)
          CFI (cfiCond13) R11H Frame(CFA, -6)
          CFI (cfiCond13) CFA SP+50
          CFI Block cfiPicker14 Using cfiCommon1
          CFI (cfiPicker14) NoFunction
          CFI (cfiPicker14) Picker
        RLAM.A  #0x2, R15
        MOVX.W  WDT_Counter(R15), R8
        MOVX.W  WDT_Counter + 2(R15), R9
        CMP.W   R13, R9
        RETA
          CFI EndBlock cfiCond12
          CFI EndBlock cfiCond13
          CFI EndBlock cfiPicker14

        RSEG `CODE`:CODE:NOROOT(1)
?Subroutine3:
          CFI Block cfiCond15 Using cfiCommon0
          CFI Function WatchDog_Time_Cal
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+50
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function WatchDog_Time_Cal
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond16) R4L Frame(CFA, -36)
          CFI (cfiCond16) R4H Frame(CFA, -34)
          CFI (cfiCond16) R5L Frame(CFA, -32)
          CFI (cfiCond16) R5H Frame(CFA, -30)
          CFI (cfiCond16) R6L Frame(CFA, -28)
          CFI (cfiCond16) R6H Frame(CFA, -26)
          CFI (cfiCond16) R7L Frame(CFA, -24)
          CFI (cfiCond16) R7H Frame(CFA, -22)
          CFI (cfiCond16) R8L Frame(CFA, -20)
          CFI (cfiCond16) R8H Frame(CFA, -18)
          CFI (cfiCond16) R9L Frame(CFA, -16)
          CFI (cfiCond16) R9H Frame(CFA, -14)
          CFI (cfiCond16) R10L Frame(CFA, -12)
          CFI (cfiCond16) R10H Frame(CFA, -10)
          CFI (cfiCond16) R11L Frame(CFA, -8)
          CFI (cfiCond16) R11H Frame(CFA, -6)
          CFI (cfiCond16) CFA SP+50
          CFI Block cfiPicker17 Using cfiCommon1
          CFI (cfiPicker17) NoFunction
          CFI (cfiPicker17) Picker
        ADD.W   #0x1, R6
        MOV.W   R6, R15
        RLAM.A  #0x2, R15
        MOV.W   R12, R4
        MOV.W   R13, R5
        SUBX.W  WDT_Counter(R15), R4
        SUBCX.W WDT_Counter + 2(R15), R5
        MOV.W   R8, R14
        MOV.W   R9, R15
        SUB.W   R12, R14
        SUBC.W  R13, R15
        CMP.W   R15, R5
        RETA
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiPicker17

        RSEG `CODE`:CODE:NOROOT(1)
?Subroutine2:
          CFI Block cfiCond18 Using cfiCommon0
          CFI Function WatchDog_Time_Cal
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+52
          CFI Block cfiCond19 Using cfiCommon0
          CFI (cfiCond19) Function WatchDog_Time_Cal
          CFI (cfiCond19) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond19) R4L Frame(CFA, -36)
          CFI (cfiCond19) R4H Frame(CFA, -34)
          CFI (cfiCond19) R5L Frame(CFA, -32)
          CFI (cfiCond19) R5H Frame(CFA, -30)
          CFI (cfiCond19) R6L Frame(CFA, -28)
          CFI (cfiCond19) R6H Frame(CFA, -26)
          CFI (cfiCond19) R7L Frame(CFA, -24)
          CFI (cfiCond19) R7H Frame(CFA, -22)
          CFI (cfiCond19) R8L Frame(CFA, -20)
          CFI (cfiCond19) R8H Frame(CFA, -18)
          CFI (cfiCond19) R9L Frame(CFA, -16)
          CFI (cfiCond19) R9H Frame(CFA, -14)
          CFI (cfiCond19) R10L Frame(CFA, -12)
          CFI (cfiCond19) R10H Frame(CFA, -10)
          CFI (cfiCond19) R11L Frame(CFA, -8)
          CFI (cfiCond19) R11H Frame(CFA, -6)
          CFI (cfiCond19) CFA SP+52
          CFI Block cfiPicker20 Using cfiCommon1
          CFI (cfiPicker20) NoFunction
          CFI (cfiPicker20) Picker
        CALLA   #?Subroutine9
??CrossCallReturnLabel_15:
        MOV.W   &__iar_HWMUL + 36, R12         // RES0
        MOV.W   &__iar_HWMUL + 38, R13         // RES1
        MOV.W   &__iar_HWMUL + 40, R12         // RES2
        MOV.W   &__iar_HWMUL + 42, R15         // RES3
        RETA
          CFI EndBlock cfiCond18
          CFI EndBlock cfiCond19
          CFI EndBlock cfiPicker20

        RSEG `CODE`:CODE:NOROOT(1)
?Subroutine9:
          CFI Block cfiCond21 Using cfiCommon0
          CFI Function WatchDog_Time_Cal
          CFI Conditional ??CrossCallReturnLabel_14
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+52
          CFI Block cfiCond22 Using cfiCommon0
          CFI (cfiCond22) Function WatchDog_Time_Cal
          CFI (cfiCond22) Conditional ??CrossCallReturnLabel_15, ??CrossCallReturnLabel_0
          CFI (cfiCond22) R4L Frame(CFA, -36)
          CFI (cfiCond22) R4H Frame(CFA, -34)
          CFI (cfiCond22) R5L Frame(CFA, -32)
          CFI (cfiCond22) R5H Frame(CFA, -30)
          CFI (cfiCond22) R6L Frame(CFA, -28)
          CFI (cfiCond22) R6H Frame(CFA, -26)
          CFI (cfiCond22) R7L Frame(CFA, -24)
          CFI (cfiCond22) R7H Frame(CFA, -22)
          CFI (cfiCond22) R8L Frame(CFA, -20)
          CFI (cfiCond22) R8H Frame(CFA, -18)
          CFI (cfiCond22) R9L Frame(CFA, -16)
          CFI (cfiCond22) R9H Frame(CFA, -14)
          CFI (cfiCond22) R10L Frame(CFA, -12)
          CFI (cfiCond22) R10H Frame(CFA, -10)
          CFI (cfiCond22) R11L Frame(CFA, -8)
          CFI (cfiCond22) R11H Frame(CFA, -6)
          CFI (cfiCond22) CFA SP+56
          CFI Block cfiCond23 Using cfiCommon0
          CFI (cfiCond23) Function WatchDog_Time_Cal
          CFI (cfiCond23) Conditional ??CrossCallReturnLabel_15, ??CrossCallReturnLabel_1
          CFI (cfiCond23) R4L Frame(CFA, -36)
          CFI (cfiCond23) R4H Frame(CFA, -34)
          CFI (cfiCond23) R5L Frame(CFA, -32)
          CFI (cfiCond23) R5H Frame(CFA, -30)
          CFI (cfiCond23) R6L Frame(CFA, -28)
          CFI (cfiCond23) R6H Frame(CFA, -26)
          CFI (cfiCond23) R7L Frame(CFA, -24)
          CFI (cfiCond23) R7H Frame(CFA, -22)
          CFI (cfiCond23) R8L Frame(CFA, -20)
          CFI (cfiCond23) R8H Frame(CFA, -18)
          CFI (cfiCond23) R9L Frame(CFA, -16)
          CFI (cfiCond23) R9H Frame(CFA, -14)
          CFI (cfiCond23) R10L Frame(CFA, -12)
          CFI (cfiCond23) R10H Frame(CFA, -10)
          CFI (cfiCond23) R11L Frame(CFA, -8)
          CFI (cfiCond23) R11H Frame(CFA, -6)
          CFI (cfiCond23) CFA SP+56
          CFI Block cfiPicker24 Using cfiCommon1
          CFI (cfiPicker24) NoFunction
          CFI (cfiPicker24) Picker
        MOV.W   #0x6e98, &__iar_HWMUL + 32     // OP2L
        MOV.W   #0x8312, &__iar_HWMUL + 34     // OP2H
        RETA
          CFI EndBlock cfiCond21
          CFI EndBlock cfiCond22
          CFI EndBlock cfiCond23
          CFI EndBlock cfiPicker24

        RSEG `CODE`:CODE:NOROOT(1)
WatchDog_Init:
          CFI Block cfiBlock25 Using cfiCommon0
          CFI Function WatchDog_Init
          CFI NoCalls
        CALLA   #?Subroutine8
??CrossCallReturnLabel_12:
        BIS.W   #0x5a08, R12
          CFI EndBlock cfiBlock25
        REQUIRE ?Subroutine1
        REQUIRE _A_WDTCTL_L
        // Fall through to label ?Subroutine1

        RSEG `CODE`:CODE:NOROOT(1)
?Subroutine1:
          CFI Block cfiBlock26 Using cfiCommon0
          CFI NoFunction
        MOV.W   R12, &0x15c
        RETA
          CFI EndBlock cfiBlock26

        RSEG `CODE`:CODE:NOROOT(1)
WatchDog_Timer_Init:
          CFI Block cfiBlock27 Using cfiCommon0
          CFI Function WatchDog_Timer_Init
          CFI NoCalls
        CALLA   #?Subroutine8
??CrossCallReturnLabel_13:
        BIS.W   #0x5a18, R12
        JMP     ?Subroutine1
        NOP
          CFI EndBlock cfiBlock27
        REQUIRE _A_WDTCTL_L

        RSEG `CODE`:CODE:NOROOT(1)
?Subroutine8:
          CFI Block cfiCond28 Using cfiCommon0
          CFI Function WatchDog_Init
          CFI Conditional ??CrossCallReturnLabel_12
          CFI CFA SP+8
          CFI Block cfiCond29 Using cfiCommon0
          CFI (cfiCond29) Function WatchDog_Timer_Init
          CFI (cfiCond29) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond29) CFA SP+8
          CFI Block cfiPicker30 Using cfiCommon1
          CFI (cfiPicker30) NoFunction
          CFI (cfiPicker30) Picker
          CFI (cfiCond28) FunCall WatchDog_Init WatchDog_Time_Cal
          CFI (cfiCond29) FunCall WatchDog_Timer_Init WatchDog_Time_Cal
        CALLA   #WatchDog_Time_Cal
        MOVA    &SFRX, R15
        BIC.W   #0x1, 0(R15)
        RETA
          CFI EndBlock cfiCond28
          CFI EndBlock cfiCond29
          CFI EndBlock cfiPicker30

        RSEG `CODE`:CODE:NOROOT(1)
WatchDog_Delay_Ms:
          CFI Block cfiBlock31 Using cfiCommon0
          CFI Function WatchDog_Delay_Ms
        PUSHM.A #0x1, R10
          CFI R10L Frame(CFA, -8)
          CFI R10H Frame(CFA, -6)
          CFI CFA SP+8
        MOVA    &SFRX, R10
        BIC.W   #0x1, 0x2(R10)
          CFI FunCall WatchDog_Time_Cal
        CALLA   #WatchDog_Time_Cal
        BIC.W   #0x1, 0(R10)
        BIS.W   #0x5a18, R12
        MOV.W   R12, &0x15c
??WatchDog_Delay_Ms_0:
        BIT.W   #0x1, 0x2(R10)
        JEQ     ??WatchDog_Delay_Ms_0
        POPM.A  #0x1, R10
          CFI R10H SameValue
          CFI R10L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock31
        REQUIRE _A_WDTCTL_L

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
WatchDog_Feed:
          CFI Block cfiBlock32 Using cfiCommon0
          CFI Function WatchDog_Feed
          CFI NoCalls
        MOV.W   &0x15c, R15
        AND.B   #0xff, R15
        BIS.W   #0x5a08, R15
        JMP     ?Subroutine0
        NOP
          CFI EndBlock cfiBlock32
        REQUIRE _A_WDTCTL_L
//   70 /*************************************************************************
//   71 *  函数名称：WatchDog_ITConfig(STATUS ITState)
//   72 *  功能说明：设置看门狗中断是否使能
//   73 *  参数说明：STATUS ITState ：是否使能中断
//   74 *  函数返回：无
//   75 *  使用示例：WatchDog_ITConfig(ENABLE);  //使能看门狗中断
//   76 *************************************************************************/

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
//   77 void  WatchDog_ITConfig(STATUS ITState)
WatchDog_ITConfig:
          CFI Block cfiBlock33 Using cfiCommon0
          CFI Function WatchDog_ITConfig
          CFI NoCalls
//   78 {
//   79   if(ITState != DISABLE)
        CMP.B   #0x0, R12
        JEQ     ??WatchDog_ITConfig_0
//   80   {
//   81     SFRX->IFG.WDT = RESET;
        MOVA    &SFRX, R14
        BIC.W   #0x1, 0x2(R14)
//   82     SFRX->IE.WDT = ENABLE;  //开启看门狗中断
        BIS.W   #0x1, 0(R14)
        RETA
//   83   }
//   84   else
//   85   {
//   86     SFRX->IE.WDT = DISABLE;
??WatchDog_ITConfig_0:
        MOVA    &SFRX, R15
        BIC.W   #0x1, 0(R15)
//   87   }
//   88 }
        RETA
          CFI EndBlock cfiBlock33
//   89 /*************************************************************************
//   90 *  函数名称：SoftWare_RESET(void)
//   91 *  功能说明：软件触发一次复位
//   92 *  参数说明：无
//   93 *  函数返回：无
//   94 *  使用示例：SoftWare_RESET();  //软件复位一次单片机
//   95 *****************************************************{********************/  

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
//   96 void  SoftWare_RESET(void)
SoftWare_RESET:
          CFI Block cfiBlock34 Using cfiCommon0
          CFI Function SoftWare_RESET
          CFI NoCalls
//   97 {
//   98   WDTCTL = 0x0000;
        MOV.W   #0x0, &0x15c
//   99 }
        RETA
          CFI EndBlock cfiBlock34
        REQUIRE _A_WDTCTL_L

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
?setjmp_save_r4:
        REQUIRE ?setjmp_r4
        REQUIRE ?longjmp_r4

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
?setjmp_save_r5:
        REQUIRE ?setjmp_r5
        REQUIRE ?longjmp_r5

        END
//  100 //看门狗计算时间函数
//  101 uint16_t WatchDog_Time_Cal(uint32_t ms)
//  102 {
//  103   float smclk_OffectTime,aclk_OffectTime,vlo_OffectTime; //误差时间
//  104   int32_t smclk_OffectTimeTemp = 0,aclk_OffectTimeTemp = 0 ,vlo_OffectTimeTemp = 0;
//  105   uint16_t smclk_DividerValue = 7 ,aclk_DividerValue = 7, vlo_DividerValue = 7;
//  106   uint32_t SelectClock;
//  107   uint32_t WDT_CounterValue;
//  108   /**********************计算时钟源及计时时间**********************************/
//  109   //SMCLK
//  110   SelectClock = g_sClock.SMCLK.nHZ/1000;
//  111   WDT_CounterValue = ms*SelectClock;
//  112   while((WDT_CounterValue > WDT_Counter[smclk_DividerValue]) && (smclk_DividerValue > 0))
//  113   {
//  114     smclk_DividerValue --;
//  115   }
//  116   if(smclk_DividerValue == 7 || smclk_DividerValue == 0)
//  117   {
//  118     smclk_OffectTimeTemp = (WDT_Counter[smclk_DividerValue]-WDT_CounterValue);
//  119   }
//  120   else //在两个时间内选出误差时间最短的
//  121   {
//  122     if((WDT_Counter[smclk_DividerValue ]-WDT_CounterValue) > (WDT_CounterValue-WDT_Counter[smclk_DividerValue +1]))
//  123     {
//  124       smclk_OffectTimeTemp = (WDT_CounterValue-WDT_Counter[++smclk_DividerValue ]);
//  125     }
//  126     else
//  127     {
//  128       smclk_OffectTimeTemp = (WDT_Counter[smclk_DividerValue ]-WDT_CounterValue);
//  129     }
//  130   }
//  131   smclk_OffectTimeTemp = smclk_OffectTimeTemp>0 ? smclk_OffectTimeTemp : -smclk_OffectTimeTemp;
//  132   smclk_OffectTime = (float)smclk_OffectTimeTemp/(float)g_sClock.SMCLK.nHZ;
//  133   /*ACLK*/
//  134   SelectClock = g_sClock.ACLK.nHZ;
//  135   WDT_CounterValue = ms*SelectClock/1000;
//  136   while((WDT_CounterValue > WDT_Counter[aclk_DividerValue]) && (aclk_DividerValue > 0))
//  137   {
//  138     aclk_DividerValue--;
//  139   }
//  140   if(aclk_DividerValue == 7 || aclk_DividerValue == 0)
//  141   {
//  142     aclk_OffectTimeTemp = (WDT_Counter[aclk_DividerValue]-WDT_CounterValue);
//  143   }
//  144   else //在两个时间内选出误差时间最短的
//  145   {
//  146     if((WDT_Counter[aclk_DividerValue ]-WDT_CounterValue) > (WDT_CounterValue-WDT_Counter[aclk_DividerValue +1]))
//  147     {
//  148       aclk_OffectTimeTemp = (WDT_CounterValue-WDT_Counter[++aclk_DividerValue]);
//  149     }
//  150     else
//  151     {
//  152       aclk_OffectTimeTemp = (WDT_Counter[aclk_DividerValue]-WDT_CounterValue);
//  153     }  
//  154   }
//  155   aclk_OffectTimeTemp = aclk_OffectTimeTemp>0 ? aclk_OffectTimeTemp : -aclk_OffectTimeTemp;
//  156   aclk_OffectTime = (float)aclk_OffectTimeTemp/(float)g_sClock.ACLK.nHZ;
//  157   /**VLOCLK_10K*/
//  158   SelectClock = VLOCLK_FREQUENCY;
//  159   WDT_CounterValue = ms*SelectClock/1000;
//  160   while((WDT_CounterValue > WDT_Counter[vlo_DividerValue]) && (vlo_DividerValue > 0))
//  161   {
//  162     vlo_DividerValue--;
//  163   }
//  164   if(vlo_DividerValue == 7 || vlo_DividerValue == 0)
//  165   {
//  166     vlo_OffectTimeTemp = (WDT_Counter[vlo_DividerValue]-WDT_CounterValue);
//  167   }
//  168   else //在两个时间内选出误差时间最短的
//  169   {
//  170     if((WDT_Counter[vlo_DividerValue]-WDT_CounterValue) > (WDT_CounterValue-WDT_Counter[vlo_DividerValue+1]))
//  171     {
//  172       vlo_OffectTimeTemp = (WDT_CounterValue-WDT_Counter[++vlo_DividerValue]);
//  173     }
//  174     else
//  175     {
//  176       vlo_OffectTimeTemp = (WDT_Counter[vlo_DividerValue]-WDT_CounterValue);
//  177     }
//  178   }
//  179   vlo_OffectTimeTemp = vlo_OffectTimeTemp>0 ? vlo_OffectTimeTemp : -vlo_OffectTimeTemp;
//  180   vlo_OffectTime = (float)vlo_OffectTimeTemp/(float)VLOCLK_FREQUENCY; 
//  181   /*********比较各个时钟源的定时精度，选择最高精度的时钟源及定时时间**********/
//  182   if((smclk_OffectTime <= aclk_OffectTime) && (smclk_OffectTime <= vlo_OffectTime))
//  183   {
//  184     return (WDTSSEL__SMCLK | smclk_DividerValue);
//  185   }
//  186   else if((aclk_OffectTime <= smclk_OffectTime) && (aclk_OffectTime <= vlo_OffectTime))
//  187   {
//  188     return (WDTSSEL__ACLK | aclk_DividerValue);
//  189   }
//  190   else
//  191   {
//  192     return (WDTSSEL__VLO | vlo_DividerValue);
//  193   }
//  194 }
// 
// 872 bytes in segment CODE
//   2 bytes in segment DATA16_AN
//  36 bytes in segment DATA20_C
// 
// 872 bytes of CODE  memory
//  36 bytes of CONST memory
//   0 bytes of DATA  memory (+ 2 bytes shared)
//
//Errors: none
//Warnings: none
