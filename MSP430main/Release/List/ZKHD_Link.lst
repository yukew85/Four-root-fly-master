###############################################################################
#
# IAR C/C++ Compiler V7.12.1.987/W32 for MSP430           26/Sep/2018  16:44:45
# Copyright 1996-2018 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for Texas Instruments MSP430
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  large
#    __code_model  =  large
#    Source file   =  
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HAL\ZKHD_Link.c
#    Command line  =  
#        -f C:\Users\颜子楠\AppData\Local\Temp\EW6168.tmp
#        ("C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HAL\ZKHD_Link.c" -D NDEBUG -D RAM_VECTOR -lC
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Release\List" -lA
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Release\List" -o
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Release\Obj" -D__MSP430F5529__ -e --double=32 --dlib_config
#        D:\IAR\430\lib\dlib\dl430xllfn.h -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 - 副本\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Drivers\inc\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Drivers\src\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Drivers\src\USB\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Drivers\src\USB\USB_config\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Drivers\src\USB\USB_User\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Drivers\srcUSB\USB_API\USB_CDC_API\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Drivers\src\USB\USB_API\USB_HID_API\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Drivers\src\USB\USB_API\USB_MSC_API\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HardWare\KEY\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HardWare\LED\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HardWare\12864\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HardWare\oled\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HardWare\mpu6050\inc\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HardWare\mpu6050\src\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HardWare\nokia5110\inc\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HardWare\nokia5110\src\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HardWare\LQ_1.8_TFT\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HardWare\LCD_API\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HardWare\2.2TFT\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HardWare\delay\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\System\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\System\inc\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\System\src\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 - 副本\User\"
#        -I "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\User\USER\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Lib\UCOSII\CONFIG\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Lib\uCOSII\App\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Lib\uCOSII\CONFIHG\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Lib\uCOSII\PORT\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Lib\UCOSII\CORE\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Lib\FatFs\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Lib\FatFs\option\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 - 副本\src\"
#        -I "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HardWare\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\HardWare\nrf24l01\" -I
#        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 - 副本\MATH\"
#        --core=430X --data_model=large -Oh --multiplier=32
#        --hw_workaround=CPU40 --hw_workaround=nop_after_lpm -DNDEBUG
#        --code_model=large)
#    Locale        =  Chinese (Simplified)_CHN.936
#    List file     =  
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Release\List\ZKHD_Link.lst
#    Object file   =  
#        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
#        副本\Release\Obj\ZKHD_Link.r43
#
###############################################################################

C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 - 副本\HAL\ZKHD_Link.c
      1          #include "ZKHD_Link.h"
      2          #include "include.h"
      3          #include "string.h"
      4          
      5          extern uint8_t TX_ADDRESS[5];	//本地地址
      6          typedef enum
      7          {
      8              RX_Addr_Config = 0,
      9              Search_Attitude,
     10              
     11          }MessageType_t;
     12          

   \                                 In  segment CODE, align 2
     13          void ZKHD_Link_Handle(ZKHD_Link_Head_t *ZKHD_Link,uint8_t *ptr)
   \                     ZKHD_Link_Handle:
     14          {
   \   000000   B1000600     SUBA    #0x6, SP
     15              uint8_t Buff[5];
     16              
     17              switch(ZKHD_Link->Message_ID)
   \   000004   CC930500     CMP.B   #0x0, 0x5(R12)
   \   000008   1920         JNE     ??ZKHD_Link_Handle_0
     18              {
     19                  case RX_Addr_Config:            
     20                      for(int i=0;i<5;i++)
     21                      {
     22                          uint8_t *Ptr = (&ZKHD_Link->Message_ID + 1 + i);
     23                          Buff[i] = *Ptr;
   \   00000A   D14C06000000 MOV.B   0x6(R12), 0(SP)
   \   000010   D14C07000100 MOV.B   0x7(R12), 0x1(SP)
   \   000016   D14C08000200 MOV.B   0x8(R12), 0x2(SP)
   \   00001C   D14C09000300 MOV.B   0x9(R12), 0x3(SP)
   \   000022   D14C0A000400 MOV.B   0xa(R12), 0x4(SP)
     24                      }
     25                      
     26                      Flash_Write_buf(MAX_SEGMENT, 0, 5,Buff);
   \   000028   CF01         MOVA    SP, R15
   \   00002A   3E400500     MOV.W   #0x5, R14
   \   00002E   0D43         MOV.W   #0x0, R13
   \   000030   3C402101     MOV.W   #0x121, R12
   \   000034   ........     CALLA   #Flash_Write_buf
     27                      NRF2401_SetRXMode();
   \   000038   ........     CALLA   #NRF2401_SetRXMode
     28                      break;
     29                  case Search_Attitude:
     30                      {
     31          //                uint8_t Tx_buff[10];
     32          //                uint8_t Send_Buff[20];
     33          //                uint8_t Send_Buff_Length;
     34          //                
     35          //                Tx_buff[0] = Firmware;
     36          //                memcpy(Tx_buff+1,&SysTick_count,4);
     37          //                memcpy(Tx_buff+5,TX_ADDRESS,5);
     38          //                
     39          //                ZKHD_Link_Send( 0x02,
     40          //                                0,
     41          //                                0,
     42          //                                Tx_buff,
     43          //                                10,
     44          //                                Send_Buff,
     45          //                                &Send_Buff_Length);
     46          //                
     47          //                UartSendBuffer(Send_Buff, Send_Buff_Length);
     48                      }
     49                      break;
     50                  default:
     51                      break;
     52              }
     53          }
   \                     ??ZKHD_Link_Handle_0:
   \   00003C   A1000600     ADDA    #0x6, SP
   \   000040   1001         RETA
     54          

   \                                 In  segment CODE, align 2
     55          void ZKHD_Link_Send(uint8_t Send_ID,
   \                     ZKHD_Link_Send:
     56                              uint8_t Receive_ID,
     57                              uint8_t Msg_ID,
     58                              uint8_t *ptr,
     59                              uint16_t Length,
     60                              uint8_t *Tx_Buff,
     61                              uint8_t *Tx_Buff_Length)
     62          {
   \   000000   3B14         PUSHM.A #0x4, R11
   \   000002   B1006A00     SUBA    #0x6a, SP
   \   000006   C90F         MOVA    R15, R9
     63              uint8_t Buff[100];
     64              int sum;
     65              
     66              ZKHD_Link_Head_t ZKHD_Link_Head;
     67              
     68              ZKHD_Link_Head.Send_ID = Send_ID;
   \   000008   C14C0300     MOV.B   R12, 0x3(SP)
     69              ZKHD_Link_Head.Receive_ID = Receive_ID;
   \   00000C   C14D0400     MOV.B   R13, 0x4(SP)
     70              ZKHD_Link_Head.Start = 0xAA;
   \   000010   F140AA000000 MOV.B   #0xaa, 0(SP)
   \   000016   1A417E00     MOV.W   0x7e(SP), R10
     71              ZKHD_Link_Head.Length = Length;
   \   00001A   C14A0100     MOV.B   R10, 0x1(SP)
   \   00001E   0F4A         MOV.W   R10, R15
   \   000020   8F10         SWPB    R15
   \   000022   C14F0200     MOV.B   R15, 0x2(SP)
     72              ZKHD_Link_Head.Message_ID = 0;
   \   000026   C1430500     MOV.B   #0x0, 0x5(SP)
     73              
     74              memcpy(Buff,&ZKHD_Link_Head.Start,sizeof(ZKHD_Link_Head_t));
   \   00002A   C801         MOVA    SP, R8
   \   00002C   A8000600     ADDA    #0x6, R8
   \   000030   3E400600     MOV.W   #0x6, R14
   \   000034   0F43         MOV.W   #0x0, R15
   \   000036   CD01         MOVA    SP, R13
   \   000038   CC08         MOVA    R8, R12
   \   00003A   ........     CALLA   #memcpy
     75              memcpy(Buff+sizeof(ZKHD_Link_Head_t),ptr,Length);
   \   00003E   0E4A         MOV.W   R10, R14
   \   000040   0F43         MOV.W   #0x0, R15
   \   000042   CD09         MOVA    R9, R13
   \   000044   CC08         MOVA    R8, R12
   \   000046   AC000600     ADDA    #0x6, R12
   \   00004A   ........     CALLA   #memcpy
     76              
     77              for(int i=0;i<Length + 6;i++)
   \   00004E   0E43         MOV.W   #0x0, R14
   \   000050   CD08         MOVA    R8, R13
   \   000052   094A         MOV.W   R10, R9
   \   000054   39500600     ADD.W   #0x6, R9
   \   000058   033C         JMP     ??ZKHD_Link_Send_1
     78              {
     79                  sum += Buff[i];
   \                     ??ZKHD_Link_Send_0:
   \   00005A   7F4D         MOV.B   @R13+, R15
   \   00005C   0B5F         ADD.W   R15, R11
     80              }
   \   00005E   1E53         ADD.W   #0x1, R14
   \                     ??ZKHD_Link_Send_1:
   \   000060   0E99         CMP.W   R9, R14
   \   000062   FB2B         JNC     ??ZKHD_Link_Send_0
     81              
     82              Buff[Length + sizeof(ZKHD_Link_Head_t)] = sum & 0xFF;
   \   000064   CF08         MOVA    R8, R15
   \   000066   EF0A         ADDA    R10, R15
   \   000068   CF4B0600     MOV.B   R11, 0x6(R15)
     83              
     84              memcpy(Tx_Buff,Buff,Length + sizeof(ZKHD_Link_Head_t) + 1);
   \   00006C   0E4A         MOV.W   R10, R14
   \   00006E   0F43         MOV.W   #0x0, R15
   \   000070   3E500700     ADD.W   #0x7, R14
   \   000074   0F63         ADDC.W  #0x0, R15
   \   000076   CD08         MOVA    R8, R13
   \   000078   3C018000     MOVA    0x80(SP), R12
   \   00007C   ........     CALLA   #memcpy
     85              *Tx_Buff_Length = Length + sizeof(ZKHD_Link_Head_t) + 1;
   \   000080   7A500700     ADD.B   #0x7, R10
   \   000084   3F018400     MOVA    0x84(SP), R15
   \   000088   CF4A0000     MOV.B   R10, 0(R15)
     86          }
   \   00008C   A1006A00     ADDA    #0x6a, SP
   \   000090   3816         POPM.A  #0x4, R11
   \   000092   1001         RETA

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
     10   ZKHD_Link_Handle
       10   -> Flash_Write_buf
       10   -> NRF2401_SetRXMode
    126   ZKHD_Link_Send
      126   -> memcpy


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      66  ZKHD_Link_Handle
     148  ZKHD_Link_Send

 
 214 bytes in segment CODE
 
 214 bytes of CODE memory

Errors: none
Warnings: none
