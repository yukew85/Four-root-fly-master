///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V7.12.1.987/W32 for MSP430          26/Sep/2018  16:44:44
// Copyright 1996-2018 IAR Systems AB.
// PC-locked license - IAR Embedded Workbench for Texas Instruments MSP430
//
//    __rt_version  =  3
//    __double_size =  32
//    __reg_r4      =  free
//    __reg_r5      =  free
//    __pic         =  no
//    __core        =  430X
//    __data_model  =  large
//    __code_model  =  large
//    Source file   =  
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\System\src\msp430f5529_vectors.c
//    Command line  =  
//        -f C:\Users\颜子楠\AppData\Local\Temp\EW5A97.tmp
//        ("C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\System\src\msp430f5529_vectors.c" -D NDEBUG -D RAM_VECTOR -lC
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Release\List" -lA
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Release\List" -o
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Release\Obj" -D__MSP430F5529__ -e --double=32 --dlib_config
//        D:\IAR\430\lib\dlib\dl430xllfn.h -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 - 副本\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\inc\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\USB\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\USB\USB_config\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\USB\USB_User\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\srcUSB\USB_API\USB_CDC_API\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\USB\USB_API\USB_HID_API\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Drivers\src\USB\USB_API\USB_MSC_API\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\KEY\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\LED\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\12864\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\oled\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\mpu6050\inc\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\mpu6050\src\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\nokia5110\inc\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\nokia5110\src\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\LQ_1.8_TFT\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\LCD_API\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\2.2TFT\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\delay\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\System\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\System\inc\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\System\src\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\User\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\User\USER\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\UCOSII\CONFIG\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\uCOSII\App\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\uCOSII\CONFIHG\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\uCOSII\PORT\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\UCOSII\CORE\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\FatFs\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Lib\FatFs\option\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 - 副本\src\"
//        -I "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\HardWare\nrf24l01\" -I
//        "C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\MATH\" --core=430X --data_model=large -Oh --multiplier=32
//        --hw_workaround=CPU40 --hw_workaround=nop_after_lpm -DNDEBUG
//        --code_model=large)
//    Locale        =  Chinese (Simplified)_CHN.936
//    List file     =  
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 -
//        副本\Release\List\msp430f5529_vectors.s43
//
///////////////////////////////////////////////////////////////////////////////

        NAME msp430f5529_vectors

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__code_model", "large"
        RTMODEL "__core", "430X"
        RTMODEL "__data_model", "large"
        RTMODEL "__double_size", "32"
        RTMODEL "__pic", "no"
        RTMODEL "__reg_r4", "free"
        RTMODEL "__reg_r5", "free"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:SORT:NOROOT(0)

        EXTERN ?longjmp_r4
        EXTERN ?longjmp_r5
        EXTERN ?setjmp_r4
        EXTERN ?setjmp_r5

        PUBWEAK ?setjmp_save_r4
        PUBWEAK ?setjmp_save_r5
        PUBLIC SYSX
        PUBLIC Set_VectorTable_To_FLASH
        PUBLIC Set_VectorTable_To_RAM
        PUBLIC Set_Vector_Handler
        PUBLIC VectorTableCopyToRAM
        PUBWEAK __VECTOR_RAM
        
          CFI Names cfiNames0
          CFI StackFrame CFA SP DATA
          CFI Resource PC:20, SP:20, SR:16, R4L:16, R4H:4, R4:20, R5L:16, R5H:4
          CFI Resource R5:20, R6L:16, R6H:4, R6:20, R7L:16, R7H:4, R7:20, R8L:16
          CFI Resource R8H:4, R8:20, R9L:16, R9H:4, R9:20, R10L:16, R10H:4
          CFI Resource R10:20, R11L:16, R11H:4, R11:20, R12L:16, R12H:4, R12:20
          CFI Resource R13L:16, R13H:4, R13:20, R14L:16, R14H:4, R14:20, R15L:16
          CFI Resource R15H:4, R15:20
          CFI ResourceParts R4 R4H, R4L
          CFI ResourceParts R5 R5H, R5L
          CFI ResourceParts R6 R6H, R6L
          CFI ResourceParts R7 R7H, R7L
          CFI ResourceParts R8 R8H, R8L
          CFI ResourceParts R9 R9H, R9L
          CFI ResourceParts R10 R10H, R10L
          CFI ResourceParts R11 R11H, R11L
          CFI ResourceParts R12 R12H, R12L
          CFI ResourceParts R13 R13H, R13L
          CFI ResourceParts R14 R14H, R14L
          CFI ResourceParts R15 R15H, R15L
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -4)
          CFI SR Undefined
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L Undefined
          CFI R12H Undefined
          CFI R12 Undefined
          CFI R13L Undefined
          CFI R13H Undefined
          CFI R13 Undefined
          CFI R14L Undefined
          CFI R14H Undefined
          CFI R14 Undefined
          CFI R15L Undefined
          CFI R15H Undefined
          CFI R15 Undefined
          CFI EndCommon cfiCommon0
        
        EXTERN default_isr

// C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\1.飞控源码 - 副本\System\src\msp430f5529_vectors.c
//    1 #include "msp430f5529_it.h"
//    2 #include "msp430f5529_vectors.h"
//    3 
//    4 //定义中断向量表到RAM的特定区域，很重要

        ASEGN DATA16_AN:DATA:NOROOT,04380H
//    5 __no_init ISR_TYPE __VECTOR_RAM[VECTOR_SIZE]@VECTOR_RAM_START_ADDR;
__VECTOR_RAM:
        DS8 128
//    6 #define            __VECTOR_ROM ((ISR_TYPE *)VECTOR_ROM_START_ADDR)
//    7 extern const SFR_MemMapPtr SFRX;

        RSEG DATA20_C:CONST:SORT:NOROOT(1)
//    8 const SYS_MemMapPtr SYSX = SYS_BASE_PTR;
SYSX:
        DATA32
        DC32 180H
//    9 /*******************************************************************************
//   10 *  函数名称：Set_Vector_Handler(VECTORn vector,__interrupt void pfunc_handler(void))
//   11 *  功能说明：设置中断向量地址
//   12 *  参数说明：
//   13             VECTORn vector  ：中断向量（枚举变量，见.h文件）
//   14             __interrupt void pfunc_handler(void)  ： 中断服务函数
//   15 *  函数返回：无
//   16 *  使用示例：Set_Vector_Handler(VECTOR_PORT1,GPIO_IRQ_Handler);    //设置PPORT1中断服务函数为GPIO_IRQ_Handler，需要先定义中断服务函数，另外最好先设置中断向量，再开启中断
//   17 ********************************************************************************/

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
//   18 void Set_Vector_Handler(VECTORn vector, __interrupt void pfunc_handler(void))
Set_Vector_Handler:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function Set_Vector_Handler
          CFI NoCalls
//   19 {
//   20   if(SYSX->RIVECT == DISABLE)        //如果没有设置中断向量表到RAM，则设置
        BIT.W   #0x1, &0x180
        JNE     ??Set_Vector_Handler_0
//   21   {
//   22     Set_VectorTable_To_RAM();                       //设置中断向量表到RAM
        BIS.W   #0x1, &0x180
//   23   }
//   24   //此处若有警告可忽略
//   25   __VECTOR_RAM[vector] = (ISR_TYPE)pfunc_handler;     //设置该中断向量地址 
??Set_Vector_Handler_0:
        MOV.W   R13, R15
        MOV.B   R12, R12
        RLA.W   R12
        MOV.W   R15, 0x4380(R12)
//   26 }
        RETA
          CFI EndBlock cfiBlock0
        REQUIRE __VECTOR_RAM
//   27 /*******************************************************************************
//   28 *  函数名称：Set_VectorTable_To_RAM()
//   29 *  功能说明：设置中断向量表映射到RAM区间
//   30 *  参数说明：无
//   31 *  函数返回：无
//   32 *  使用示例：Set_VectorTable_To_RAM();  //设置中断向量表映射到RAM
//   33 ********************************************************************************/

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
//   34 void Set_VectorTable_To_RAM(void)
Set_VectorTable_To_RAM:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function Set_VectorTable_To_RAM
          CFI NoCalls
//   35 {
//   36   SYSX->RIVECT = ENABLE;                             //设置中断向量映射到RAM区间 
        BIS.W   #0x1, &0x180
//   37 }
        RETA
          CFI EndBlock cfiBlock1
//   38 /*******************************************************************************
//   39 *  函数名称：Set_VectorTable_To_FLASH()
//   40 *  功能说明：设置中断向量表映射到ROM区间
//   41 *  参数说明：无
//   42 *  函数返回：无
//   43 *  使用示例：Set_VectorTable_To_FLASH();  //设置中断向量表映射到FLASH
//   44 ********************************************************************************/

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
//   45 void Set_VectorTable_To_FLASH(void)
Set_VectorTable_To_FLASH:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function Set_VectorTable_To_FLASH
          CFI NoCalls
//   46 {
//   47   SYSX->RIVECT = DISABLE;                            //设置中断向量映射到ROM区间 
        BIC.W   #0x1, &0x180
//   48 }
        RETA
          CFI EndBlock cfiBlock2
//   49 /*******************************************************************************
//   50 *  函数名称：VectorTableCopyToRAM()
//   51 *  功能说明：从FLASH中复制中断向量表到RAM
//   52 *  参数说明：无
//   53 *  函数返回：无
//   54 *  使用示例：VectorTableCopyToRAM();              //复制中断向量表到RAM
//   55 ********************************************************************************/

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
//   56 void VectorTableCopyToRAM(void)
VectorTableCopyToRAM:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function VectorTableCopyToRAM
          CFI NoCalls
//   57 {
//   58   for(int i=0;i < VECTOR_SIZE;i++)
        MOVA    #0xff80, R15
        MOV.W   #0x4380, R14
//   59   { //复制中断向量表，对没有定义的中断向量赋值为default_isr（默认中断服务函数）
//   60     //此处若有警告可忽略
//   61     __VECTOR_RAM[i] = (0 == __VECTOR_ROM[i] || (ISR_TYPE)0xFFFF == __VECTOR_ROM[i]) ? (ISR_TYPE)default_isr : __VECTOR_ROM[i]; 
??VectorTableCopyToRAM_0:
        MOV.W   @R15+, R13
        CMP.W   #0x0, R13
        JEQ     ??VectorTableCopyToRAM_2
        CMP.W   #0xffff, R13
        JNE     ??VectorTableCopyToRAM_1
??VectorTableCopyToRAM_2:
        MOV.W   #LWRD(default_isr), R13
??VectorTableCopyToRAM_1:
        MOV.W   R13, 0(R14)
//   62   }
        ADD.W   #0x2, R14
        CMP.W   #0x4400, R14
        JNE     ??VectorTableCopyToRAM_0
//   63 }
        RETA
          CFI EndBlock cfiBlock3
        REQUIRE __VECTOR_RAM

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
?setjmp_save_r4:
        REQUIRE ?setjmp_r4
        REQUIRE ?longjmp_r4

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
?setjmp_save_r5:
        REQUIRE ?setjmp_r5
        REQUIRE ?longjmp_r5

        END
// 
//  70 bytes in segment CODE
// 128 bytes in segment DATA16_AN
//   4 bytes in segment DATA20_C
// 
// 70 bytes of CODE  memory
//  4 bytes of CONST memory
//  0 bytes of DATA  memory (+ 128 bytes shared)
//
//Errors: none
//Warnings: 2
