///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V7.12.1.987/W32 for MSP430          22/Sep/2018  17:10:29
// Copyright 1996-2018 IAR Systems AB.
// PC-locked license - IAR Embedded Workbench for Texas Instruments MSP430
//
//    __rt_version  =  3
//    __double_size =  32
//    __reg_r4      =  free
//    __reg_r5      =  free
//    __pic         =  no
//    __core        =  430X
//    __data_model  =  large
//    __code_model  =  large
//    Source file   =  
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\src\port_int.c
//    Command line  =  
//        -f C:\Users\颜子楠\AppData\Local\Temp\EW24EF.tmp
//        (C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\src\port_int.c
//        -D DEBUG -D RAM_VECTOR -lA
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Debug\List -o
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Debug\Obj
//        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
//        -D__MSP430F5529__ -e --double=32 --dlib_config
//        D:\IAR\430\lib\dlib\dl430xllff.h -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\ -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Drivers\inc\ -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Drivers\src\ -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Drivers\src\USB\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Drivers\src\USB\USB_config\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Drivers\src\USB\USB_User\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Drivers\srcUSB\USB_API\USB_CDC_API\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Drivers\src\USB\USB_API\USB_HID_API\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Drivers\src\USB\USB_API\USB_MSC_API\
//        -I C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\ -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\delay\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\18b20\
//        -I C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\KEY\
//        -I C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\LED\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\12864\
//        -I C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\oled\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\mpu6050\inc\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\mpu6050\src\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\nokia5110\inc\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\nokia5110\src\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\LQ_1.8_TFT\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\LCD_API\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\2.2TFT\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\nrf24l01\
//        -I C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\System\ -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\System\inc\ -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\System\src\ -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\User\ -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\User\USER\ -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Lib\UCOSII\CONFIG\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Lib\uCOSII\App\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Lib\uCOSII\CONFIHG\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Lib\uCOSII\PORT\
//        -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Lib\UCOSII\CORE\
//        -I C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Lib\FatFs\ -I
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Lib\FatFs\option\
//        -I C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\HardWare\
//        --core=430X --data_model=large -On --multiplier=32
//        --hw_workaround=CPU40 --hw_workaround=nop_after_lpm
//        --code_model=large)
//    Locale        =  Chinese (Simplified)_CHN.936
//    List file     =  
//        C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\Debug\List\port_int.s43
//
///////////////////////////////////////////////////////////////////////////////

        NAME port_int

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__code_model", "large"
        RTMODEL "__core", "430X"
        RTMODEL "__data_model", "large"
        RTMODEL "__double_size", "32"
        RTMODEL "__pic", "no"
        RTMODEL "__reg_r4", "free"
        RTMODEL "__reg_r5", "free"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:SORT:NOROOT(0)

        EXTERN ?longjmp_r4
        EXTERN ?longjmp_r5
        EXTERN ?setjmp_r4
        EXTERN ?setjmp_r5

        PUBWEAK `??Port_1::??INTVEC 94`
        PUBWEAK `??Port_2::??INTVEC 84`
        PUBWEAK ?setjmp_save_r4
        PUBWEAK ?setjmp_save_r5
        PUBLIC Port_1
        PUBLIC Port_2
        
          CFI Names cfiNames0
          CFI StackFrame CFA SP DATA
          CFI Resource PC:20, SP:20, SR:16, R4L:16, R4H:4, R4:20, R5L:16, R5H:4
          CFI Resource R5:20, R6L:16, R6H:4, R6:20, R7L:16, R7H:4, R7:20, R8L:16
          CFI Resource R8H:4, R8:20, R9L:16, R9H:4, R9:20, R10L:16, R10H:4
          CFI Resource R10:20, R11L:16, R11H:4, R11:20, R12L:16, R12H:4, R12:20
          CFI Resource R13L:16, R13H:4, R13:20, R14L:16, R14H:4, R14:20, R15L:16
          CFI Resource R15H:4, R15:20
          CFI ResourceParts R4 R4H, R4L
          CFI ResourceParts R5 R5H, R5L
          CFI ResourceParts R6 R6H, R6L
          CFI ResourceParts R7 R7H, R7L
          CFI ResourceParts R8 R8H, R8L
          CFI ResourceParts R9 R9H, R9L
          CFI ResourceParts R10 R10H, R10L
          CFI ResourceParts R11 R11H, R11L
          CFI ResourceParts R12 R12H, R12L
          CFI ResourceParts R13 R13H, R13L
          CFI ResourceParts R14 R14H, R14L
          CFI ResourceParts R15 R15H, R15L
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC or(load(2, DATA, add(CFA, literal(-2))), lshift(and(load(2, DATA, add(CFA, literal(-4))), 61440), 4))
          CFI SR Frame(CFA, -4)
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L SameValue
          CFI R12H SameValue
          CFI R12 Concat
          CFI R13L SameValue
          CFI R13H SameValue
          CFI R13 Concat
          CFI R14L SameValue
          CFI R14H SameValue
          CFI R14 Concat
          CFI R15L SameValue
          CFI R15H SameValue
          CFI R15 Concat
          CFI EndCommon cfiCommon0
        
Port_1              SYMBOL "Port_1"
`??Port_1::??INTVEC 94` SYMBOL "??INTVEC 94", Port_1
Port_2              SYMBOL "Port_2"
`??Port_2::??INTVEC 84` SYMBOL "??INTVEC 84", Port_2

// C:\Users\颜子楠\Desktop\教材\附件目录\2.源码\3.飞控\src\port_int.c
//    1 #include "port_int.h"
//    2 #include "msp430f5529.h"
//    3 
//    4 // Port_1
//    5 #if defined(__TI_COMPILER_VERSION__) || defined(__IAR_SYSTEMS_ICC__)
//    6     #pragma vector = PORT1_VECTOR

        RSEG ISR_CODE:CODE:REORDER:NOROOT(1)
        CALL_GRAPH_ROOT Port_1, "interrupt"
//    7     __interrupt void Port_1(void)
Port_1:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function Port_1
          CFI NoCalls
//    8 #elif defined(__GNUC__)
//    9     void __attribute__ ((interrupt(PORT1_VECTOR))) Port_1 (void)
//   10 #else
//   11     #error Compiler not supported!
//   12 #endif
//   13 {
//   14 //    // Brd_Key_S2: P1.1
//   15 //    if(P1IFG & BIT1)
//   16 //    {
//   17 //        ;
//   18 //        
//   19 //        P1IFG &= ~BIT1;
//   20 //    }
//   21 }
        RETI
          CFI EndBlock cfiBlock0
//   22 
//   23 // Port_2
//   24 #if defined(__TI_COMPILER_VERSION__) || defined(__IAR_SYSTEMS_ICC__)
//   25     #pragma vector = PORT2_VECTOR

        RSEG ISR_CODE:CODE:REORDER:NOROOT(1)
        CALL_GRAPH_ROOT Port_2, "interrupt"
//   26     __interrupt void Port_2(void)
Port_2:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function Port_2
          CFI NoCalls
//   27 #elif defined(__GNUC__)
//   28     void __attribute__ ((interrupt(PORT1_VECTOR))) Port_2 (void)
//   29 #else
//   30     #error Compiler not supported!
//   31 #endif
//   32 {
//   33 //    // Brd_Key_S1: P2.1
//   34 //    if(P2IFG & BIT1)
//   35 //    {
//   36 //        ;
//   37 //        
//   38 //        P2IFG &= ~BIT1;
//   39 //    }
//   40 }
        RETI
          CFI EndBlock cfiBlock1

        COMMON INTVEC:CONST:ROOT(1)
        ORG 84
`??Port_2::??INTVEC 84`:
        DC16    Port_2

        COMMON INTVEC:CONST:ROOT(1)
        ORG 94
`??Port_1::??INTVEC 94`:
        DC16    Port_1

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
?setjmp_save_r4:
        REQUIRE ?setjmp_r4
        REQUIRE ?longjmp_r4

        RSEG `CODE`:CODE:REORDER:NOROOT(1)
?setjmp_save_r5:
        REQUIRE ?setjmp_r5
        REQUIRE ?longjmp_r5

        END
// 
// 4 bytes in segment INTVEC
// 4 bytes in segment ISR_CODE
// 
// 4 bytes of CODE  memory
// 0 bytes of CONST memory (+ 4 bytes shared)
//
//Errors: none
//Warnings: none
